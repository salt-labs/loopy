      - id: setup_rust_linux_common
        name: Setup the Rust environment
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y \
            autoconf \
            automake \
            binutils \
            build-essential \
            ca-certificates \
            clang \
            cmake \
            curl \
            file \
            g++ \
            gcc \
            git \
            libc6-dev \
            libgcc-10-dev \
            libgcc1 \
            librust-libm-dev \
            libmagic-dev \
            libmagic1 \
            libpq-dev \
            libpthread-stubs0-dev \
            libssl-dev \
            libtool \
            lld \
            llvm \
            make \
            pkgconf \
            rust-all \
            xutils-dev \
            zlib1g-dev \
            zstd



      - id: setup_rust_x86_64-apple-darwin
        name: Setup the Rust environment for MacOS
        if: matrix.target == 'x86_64-apple-darwin' && matrix.os == 'macos-latest'
        run: |
          brew update
          brew install \
            bzip2 \
            figlet \
            file \
            gnu-tar \
            libmagic \
            openssl \
            pkg-config \
            zlib \
            zstd

      - id: setup_rust_x86_64-unknown-linux-gnu
        name: Setup the Rust environment for x86_64-unknown-linux-gnu
        if: matrix.target == 'x86_64-unknown-linux-gnu' && matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y \
            gcc-multilib \
            g++-multilib

      - id: setup_rust_x86_64-unknown-linux-musl
        name: Setup the Rust environment for x86_64-unknown-linux-musl
        if: matrix.target == 'x86_64-unknown-linux-musl' && matrix.os == 'ubuntu-latest'
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt update
          sudo apt install -y \
            musl:arm64 \
            musl-dev:arm64 \
            musl-tools:arm64

      - id: setup_rust_aarch64_unknown_linux_gnu
        name: Setup the Rust environment for aarch64-unknown-linux-gnu
        if: matrix.target == 'aarch64-unknown-linux-gnu' && matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu

      - id: setup_rust_aarch64_unknown_linux_musl
        name: Setup the Rust environment for aarch64-unknown-linux-musl
        if: matrix.target == 'aarch64-unknown-linux-musl' && matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y \
            musl \
            musl-dev \
            musl-tools

      - id: setup_rust_android
        name: Setup the Rust environment for Android
        if: matrix.target == 'aarch64-linux-android' && matrix.os == 'ubuntu-latest'
        run: |
          # Install Android NDK
          curl -sSfL https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip -o android-ndk.zip
          unzip android-ndk.zip -d /opt/android-ndk
          export PATH=$PATH:/opt/android-sdk/cmdline-tools/tools/bin
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-29" "build-tools;29.0.2"
          export PATH=$PATH:/opt/android-sdk/ndk/22.0.7026061

      - id: setup_windows_common
        name: Setup Windows (MSYS2)
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          platform-check-severity: fatal
          update: true
          release: true
          msystem: CLANG64
          install: >-
            git
            base-devel

      - id: setup_windows_rust
        name: Setup Windows (Rust)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          cargo install cargo-vcpkg
          cargo vcpkg --verbose build
