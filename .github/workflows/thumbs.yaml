---
##################################################
# Name: thumbs.yaml
# Description:
#   A Workflow that posts Thumbs Up/Down comments.
##################################################

name: Thumbs Up/Down

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

permissions:
  contents: read
  issues: write
  pull-requests: write
  actions: read
  checks: read
  deployments: read
  statuses: read

env:
  ORGANISATION: ${{ github.repository_owner }}
  PROJECT: ${{ github.event.repository.name }}

  # Works on pushes or PRs
  BRANCH_NAME_CURRENT: ${{ github.head_ref || github.ref_name }}
  BRANCH_NAME_DEFAULT: ${{ github.event.repository.default_branch }}

jobs:
  wait_linter:
    name: Wait for Linter

    runs-on: ${{ matrix.os }}

    timeout-minutes: 60

    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest

    steps:
      - id: wait_for_linter
        name: Wait for Linter (${{ matrix.os }})
        uses: fountainhead/action-wait-for-check@v1.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          checkName: GitHub Super-Linter (${{ matrix.os }})
          timeoutSeconds: 1800
          intervalSeconds: 30

    outputs:
      conclusion: ${{ steps.wait_for_linter.outputs.conclusion }}

  wait_rust:
    name: Wait for Rust

    runs-on: ${{ matrix.os }}

    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
            toolchain: stable
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            toolchain: stable
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            toolchain: stable
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            toolchain: stable
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            toolchain: stable
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
            toolchain: stable
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            toolchain: stable

    steps:
      - id: wait_for_rust
        name: Wait for Rust (${{ matrix.target }}, ${{ matrix.os }}, ${{ matrix.toolchain }})
        uses: fountainhead/action-wait-for-check@v1.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          checkName: Cargo Check (${{ matrix.target }}, ${{ matrix.os }}, ${{ matrix.toolchain }})
          timeoutSeconds: 1800
          intervalSeconds: 30

      - id: matrix_conclusion
        name: Store Matrix conclusions
        shell: bash
        run: |
          CONCLUSION="${{ steps.wait_for_rust.outputs.conclusion }}"
          echo "Conclusion: ${CONCLUSION}"

          CONCLUSIONS_JSON=${CONCLUSIONS_JSON:-"{}"}
          echo "Conclusions JSON: ${CONCLUSIONS_JSON}"

          CONCLUSIONS_JSON=$(echo "${CONCLUSIONS_JSON}" | \
          jq -c \
            --arg TARGET "${{ matrix.target }}" \
            --arg CONCLUSION "${{ steps.wait_for_rust.outputs.conclusion }}" \
            '. + {($TARGET): $CONCLUSION}')

          echo "Conclusions JSON: ${CONCLUSIONS_JSON}"
          mkdir artifacts
          echo "${CONCLUSIONS_JSON}" >> "artifacts/${{ matrix.target }}-conclusions.json"
          echo "CONCLUSIONS_JSON=${CONCLUSIONS_JSON}" >> "${GITHUB_OUTPUT}"

      - id: upload_artifacts
        name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: conclusions
          path: artifacts

    outputs:
      conclusions_json: ${{ steps.matrix_conclusion.outputs.CONCLUSIONS_JSON }}

  comment:
    name: Thumbs

    runs-on: ${{ matrix.os }}

    timeout-minutes: 15

    needs:
      - wait_linter
      - wait_rust

    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest

    steps:
      - id: download_artifacts
        name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: conclusions

      - id: thumbs
        name: Determine Thumbs Up/Down
        run: |
          sudo apt-get install -y jq
          JSON_CONCLUSIONS="${{ needs.wait_rust.outputs.conclusions_json }}"
          echo "Conclusions:"
          echo ${JSON_CONCLUSIONS}
          echo "### Conclusions JSON file ###"
          ls -la conclusions
          cat conclusions/*.json | jq

      #- id: pr_comment_thumbs_up
      #  name: PR Comment (Thumbs Up)
      #  if: ${{ needs.wait_linter.outputs.conclusion == 'success' && !contains(fromJson(needs.wait_rust.outputs.matrix_conclusions), 'failure') }}
      #  uses: exercism/pr-commenter-action@v1.4.0
      #  with:
      #    github-token: ${{ secrets.GITHUB_TOKEN }}
      #    config-file: .github/pr-comments/thumbs_up.yaml
      #    template-variables: |
      #      {
      #        "id": "${{ github.sha }}-thumbs",
      #        "onCreate": "create",
      #        "onUpdate": "recreate"
      #      }

      #- id: pr_comment_thumbs_down
      #  name: PR Comment (Thumbs Down)
      #  if: ${{ needs.wait_linter.outputs.conclusion == 'success' && contains(fromJson(needs.wait_rust.outputs.matrix_conclusions), 'failure') }}
      #  uses: exercism/pr-commenter-action@v1.4.0
      #  with:
      #    github-token: ${{ secrets.GITHUB_TOKEN }}
      #    config-file: .github/pr-comments/thumbs_down.yaml
      #    template-variables: |
      #      {
      #        "id": "${{ github.sha }}-thumbs",
      #        "onCreate": "create",
      #        "onUpdate": "recreate"
      #      }
